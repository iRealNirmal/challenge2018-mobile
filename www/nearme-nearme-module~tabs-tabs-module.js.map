{"version":3,"sources":["webpack:///./src/app/nearme/nearme.module.ts","webpack:///./src/app/nearme/nearme.page.html","webpack:///./src/app/nearme/nearme.page.scss","webpack:///./src/app/nearme/nearme.page.ts","webpack:///./src/app/service/profile.service.ts"],"names":[],"mappings":"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","file":"nearme-nearme-module~tabs-tabs-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { NearmePage } from './nearme.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NearmePage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [NearmePage]\n})\nexport class NearmePageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Near Me</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-refresher slot=\\\"fixed\\\" (ionRefresh)=\\\"loadData($event)\\\">\\n    <ion-refresher-content></ion-refresher-content>\\n  </ion-refresher>\\n  <ion-list>\\n    <ion-item  detail *ngFor=\\\"let shop of shops\\\" [href]=\\\"'/detailView/' + shop.id\\\">\\n      <ion-label>\\n        <h2>{{shop.name}}</h2>\\n        <h3>I'm a big deal</h3>\\n        <p>{{shop.description}}</p>\\n      </ion-label>\\n    </ion-item>\\n    <ion-item  *ngIf=\\\"!shops\\\">\\n        <ion-label>\\n          <h2>Nothing to show</h2>\\n        </ion-label>\\n      </ion-item>\\n  </ion-list>\\n</ion-content>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\nimport {ProfileService} from '../service/profile.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-nearme',\n  templateUrl: './nearme.page.html',\n  styleUrls: ['./nearme.page.scss'],\n})\nexport class NearmePage implements OnInit {\n  shops:any;\n  constructor(private profile: ProfileService,private geolocation: Geolocation, public toastController: ToastController) { }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData(refresher?){\n    this.geolocation.getCurrentPosition().then((resp) => {\n      //console.log(resp.coords);\n       this.profile.getShop(resp.coords.latitude,resp.coords.longitude).subscribe(\n        value => {\n          if(refresher){\n            refresher.target.complete();\n         }\n         this.shops = value;\n        },\n        err => {\n          if(refresher){\n            refresher.target.complete();\n         }\n          console.log(err);\n        }\n      );\n     }).catch(async (error) => {\n      const toast = await this.toastController.create({\n        message: error,\n        showCloseButton: true,\n        closeButtonText: 'Done'\n      });\n      toast.present();\n      console.log('Error getting location', error);\n     });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Storage } from '@ionic/storage';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(public http: HttpClient,public storage: Storage) {\n  }\n\n  getProfile():  Observable<any>{\n    console.log('get profile')\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    const date = new Date();\n    return this.http.post(`http://192.168.1.103:3000/application/profile?${date}`, httpOptions).pipe(map((response: Response) => response ));\n  }\n\n  getShop(lat,lng):  Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    let location = {lat,lng};\n\n    return this.http.post(\"http://192.168.1.103:3000/application/shopnear\", location, httpOptions).pipe(map((response: Response) => response ));\n  }\n\n  getShopAll():  Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post(\"http://192.168.1.103:3000/application/shop\", httpOptions).pipe(map((response: Response) => response ));\n  }\n  getShopList():  Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post(\"http://192.168.1.103:3000/application/shoplist\", httpOptions).pipe(map((response: Response) => response ));\n  }\n\n  purchaseHistory():  Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post(\"http://192.168.1.103:3000/application/purchaseHistory\", httpOptions).pipe(map((response: Response) => response ));\n  }\n\n  order(id):  Observable<any>{\n    const httpOptions = {\n      headers: new HttpHeaders({\n      'Content-Type':  'application/json'\n      })\n    };\n    return this.http.post(\"http://192.168.1.103:3000/application/viewOrder\", { id }, httpOptions).pipe(map((response: Response) => response ));\n  }\n\n}\n"],"sourceRoot":""}