{"version":3,"sources":["webpack:///./src/app/login/login.module.ts","webpack:///./src/app/login/login.page.html","webpack:///./src/app/login/login.page.scss","webpack:///./src/app/login/login.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACQ;AACW;AAErB;AAEJ;AAEzC,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qDAAS;KACrB;CACF,CAAC;AAYF;IAAA;IAA8B,CAAC;IAAlB,eAAe;QAV3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,kEAAmB;gBACnB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,qDAAS,CAAC;SAC1B,CAAC;OACW,eAAe,CAAG;IAAD,sBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B5B,syF;;;;;;;;;;;ACAA,0BAA0B,eAAe,EAAE,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAO;AACiC;AAE1C;AACkD;AACxB;AAC1B;AAC6B;AAMtE;IAIE,mBAAmB,IAA0B,EACpC,MAAc,EACb,KAAY,EACZ,OAAe,EACf,KAAsB,EACtB,IAAoB;QALX,SAAI,GAAJ,IAAI,CAAsB;QACpC,WAAM,GAAN,MAAM,CAAQ;QACb,UAAK,GAAL,KAAK,CAAO;QACZ,YAAO,GAAP,OAAO,CAAQ;QACf,UAAK,GAAL,KAAK,CAAiB;QACtB,SAAI,GAAJ,IAAI,CAAgB;QAP9B,eAAU,GAAW,KAAK,CAAC;IASzB,CAAC;IAEH,4BAAQ,GAAR;QAAA,iBAeC;QAdC,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YACzI,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;SACxG,CAAC,CAAC;QACH,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,IAAI,CAC1B,UAAM,GAAG;;;;4BACO,qBAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;;wBAAnC,KAAK,GAAG,SAA2B;wBACzC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBACnB,IAAG,KAAK,EAAC;4BACP,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;yBACxB;;;;aACF,EACD,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,GAAG,CAAC,EAA9C,CAA8C,CACtD,CAAC;IACJ,CAAC;IAED,yBAAK,GAAL;QAAA,iBAmBC;QAlBC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7C,aAAG;YACD,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5D,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC5D,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;YACnC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YACtD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC,EACD,UAAM,GAAG;;;;4BACK,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;4BAClC,OAAO,EAAE,iCAAiC;4BAC1C,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHE,KAAK,GAAG,SAGV;wBAEF,KAAK,CAAC,OAAO,EAAE,CAAC;wBAChB,OAAO,CAAC,GAAG,CAAC,WAAS,GAAG,CAAC,UAAY,CAAC,CAAC;;;;aACxC,CACF,CAAC;IACJ,CAAC;IAED,+BAAW,GAAX;QAAA,iBA2CD;QA1CG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACb,QAAQ,EAAE,aAAa;YACvB,YAAY,EAAE,UAAU;YACxB,aAAa,EAAC,IAAI;YAClB,sBAAsB,EAAE,SAAS;YACjC,eAAe,EAAE,qBAAqB,CAAC,cAAc;SACxD,CAAC;aACD,IAAI,CAAC,UAAO,MAAW;;;;;4BAEtB,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,cAAI;4BAC1C,QAAQ,GAAG,IAAI,CAAC;wBAClB,CAAC,CAAC;;wBAFF,SAEE,CAAC;wBACH,qBAAM,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,cAAI;gCAC1C,QAAQ,GAAG,IAAI,CAAC;4BAClB,CAAC,CAAC;;wBAFF,SAEE,CAAC;wBACH,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAC,QAAQ,YAAC,QAAQ,YAAC,CAAC,CAAC,SAAS,CAC5C,aAAG;4BACD,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;4BACnC,KAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;4BACtD,KAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC5B,CAAC,EACD,UAAM,GAAG;;;;4CACK,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;4CAClC,OAAO,EAAE,qEAAqE;4CAC9E,QAAQ,EAAE,IAAI;yCACf,CAAC;;wCAHE,KAAK,GAAG,SAGV;wCACF,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;wCACnB,KAAK,CAAC,OAAO,EAAE,CAAC;wCAChB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;wCACxB,OAAO,CAAC,GAAG,CAAC,WAAS,GAAG,CAAC,UAAY,CAAC,CAAC;;;;6BACxC,CACF,CAAC;;;;aACH,CAAC;aACD,KAAK,CAAC,UAAO,KAAU;;;;4BACV,qBAAM,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;4BAClC,OAAO,EAAE,KAAK;4BACd,QAAQ,EAAE,IAAI;yBACf,CAAC;;wBAHE,KAAK,GAAG,SAGV;wBAEF,KAAK,CAAC,OAAO,EAAE,CAAC;wBAChB,OAAO,CAAC,GAAG,CAAC,WAAS,KAAO,CAAC,CAAC;;;;aAC/B,CAAC,CAAC;IACL,CAAC;IA9FY,SAAS;QALrB,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAKyB,mFAAoB;YAC5B,qDAAM;YACP,sDAAM;YACJ,sDAAO;YACR,8DAAe;YAChB,gFAAc;OATnB,SAAS,CAgGrB;IAAD,gBAAC;CAAA;AAhGqB","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <form novalidate (ngSubmit)=\\\"login()\\\" [formGroup]=\\\"loginform\\\">\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Username</ion-label>\\n      <ion-input type=\\\"text\\\" name=\\\"username\\\" formControlName=\\\"username\\\" [class.error1]=\\\"!loginform.controls.username.valid && loginform.controls.username.dirty\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-lines *ngIf=\\\"( loginform.get('username').hasError('minlength') || loginform.get('username').hasError('maxlength') ||loginform.get('username').hasError('pattern') ||loginform.get('username').hasError('required') ) && loginform.get('username').touched\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('username').hasError('required') && loginform.get('username').touched\\\">\\n        Please input your username\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('username').hasError('minlength') && loginform.get('username').touched\\\">\\n        Minimum 4 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('username').hasError('maxlength') && loginform.get('username').touched\\\">\\n        Maximum 10 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('username').hasError('pattern') && loginform.get('username').touched\\\">\\n        Just use alphabet character\\n      </div>\\n    </ion-item>\\n\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Password</ion-label>\\n      <ion-input type=\\\"password\\\" formControlName=\\\"password\\\" [class.error1]=\\\"!loginform.controls.password.valid && loginform.controls.password.dirty\\\"></ion-input>\\n    </ion-item>\\n\\n    <ion-item no-lines *ngIf=\\\"( loginform.get('password').hasError('minlength') || loginform.get('password').hasError('maxlength') ||loginform.get('password').hasError('required') ) && loginform.get('password').touched\\\">\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('password').hasError('required') && loginform.get('password').touched\\\">\\n        Please input your password\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('password').hasError('minlength') && loginform.get('password').touched\\\">\\n        Minimum 6 characters\\n      </div>\\n      <div class=\\\"error\\\" *ngIf=\\\"loginform.get('password').hasError('maxlength') && loginform.get('password').touched\\\">\\n        Maximum 12 characters\\n      </div>\\n    </ion-item>\\n    <ion-button  type=\\\"submit\\\" size=\\\"block\\\" color=\\\"primary\\\" [disabled]=\\\"loginform.invalid\\\">LOGIN</ion-button >\\n    <div>\\n      <a  routerLink=\\\"/signup\\\">Click here to Create New Account.</a>\\n    </div>\\n    </form>\\n    <ion-button  size=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"fingerLogin()\\\" *ngIf=\\\"showFinger\\\">Finger LOGIN</ion-button >\\n</ion-content>\\n\"","module.exports = \".error {\\n  color: red; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { NavController, NavParams, Events, ToastController } from '@ionic/angular';\n\nimport { Router } from '@angular/router';\nimport { Validators, FormGroup, FormControl, ReactiveFormsModule   } from '@angular/forms';\nimport { FingerprintAIO } from '@ionic-native/fingerprint-aio/ngx';\nimport { Storage } from '@ionic/storage';\nimport {AuthnticationService} from '../service/authntication.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  loginform: FormGroup;\n  showFinger:boolean = false;\n\n  constructor(public auth: AuthnticationService,\n    public events: Events,\n    private route:Router,\n    private storage:Storage,\n    private toast: ToastController,\n    private faio: FingerprintAIO){\n      \n    }\n\n  ngOnInit() {\n    this.loginform = new FormGroup({\n      username: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z ]*'), Validators.minLength(4), Validators.maxLength(10)]),\n      password: new FormControl('', [Validators.required, Validators.minLength(6), Validators.maxLength(12)]),\n    });\n    this.faio.isAvailable().then(\n      async res => {\n        const check = await this.auth.prevLogin();\n        console.log(check);\n        if(check){\n          this.showFinger = true;\n        }\n      },\n      err => console.error('TouchID is not available', err)\n    );\n  }\n\n  login(){\n    this.auth.login(this.loginform.value).subscribe(\n      suc => {\n        this.storage.set('userName', this.loginform.value.username);\n        this.storage.set('password', this.loginform.value.password);\n        this.storage.set('loggedin', true);\n        this.events.publish('loggedin', this.loginform.value);\n        this.route.navigate(['']);\n      },\n      async err => {\n        let toast = await this.toast.create({\n          message: 'Incorrect username or password.',\n          duration: 2000\n        });\n    \n        toast.present();\n        console.log(`error ${err.statusText}`);\n      }\n    );\n  }\n\n  fingerLogin(){\n    this.faio.show({\n      clientId: 'loyalityApp',\n      clientSecret: 'password', //Only necessary for Android\n      disableBackup:true,  //Only for Android(optional)\n      localizedFallbackTitle: 'Use Pin', //Only for iOS\n      localizedReason: 'Please authenticate' //Only for iOS\n  })\n  .then(async (result: any) => {\n    let username, password;\n    await this.storage.get('userName').then(data => {\n      username = data;\n    });\n    await this.storage.get('password').then(data => {\n      password = data;\n    });\n    this.auth.login({username,password}).subscribe(\n      suc => {\n        this.storage.set('loggedin', true);\n        this.events.publish('loggedin', this.loginform.value);\n        this.route.navigate(['']);\n      },\n      async err => {\n        let toast = await this.toast.create({\n          message: 'Seems like username and password has been changed, please do login.',\n          duration: 2000\n        });\n        this.auth.logout();\n        toast.present();\n        this.showFinger = false;\n        console.log(`error ${err.statusText}`);\n      }\n    );\n  })\n  .catch(async (error: any) => {\n    let toast = await this.toast.create({\n      message: error,\n      duration: 2000\n    });\n\n    toast.present();\n    console.log(`error ${error}`);\n  });\n}\n\n}\n"],"sourceRoot":""}